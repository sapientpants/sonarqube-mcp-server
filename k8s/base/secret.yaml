apiVersion: v1
kind: Secret
metadata:
  name: sonarqube-mcp-secrets
  namespace: sonarqube-mcp
  labels:
    app.kubernetes.io/name: sonarqube-mcp
    app.kubernetes.io/instance: production
    app.kubernetes.io/component: secrets
type: Opaque
stringData:
  # Placeholder - will be replaced by actual secret in each environment
  SONARQUBE_TOKEN: "PLACEHOLDER_DO_NOT_USE"
---
apiVersion: v1
kind: Secret
metadata:
  name: sonarqube-mcp-tls
  namespace: sonarqube-mcp
  labels:
    app.kubernetes.io/name: sonarqube-mcp
    app.kubernetes.io/instance: production
    app.kubernetes.io/component: tls
type: kubernetes.io/tls
data:
  # Placeholder values - replace with actual TLS certificate and key
  # Generate with: kubectl create secret tls sonarqube-mcp-tls --cert=tls.crt --key=tls.key --dry-run=client -o yaml
  # For testing, you can use self-signed certificates or omit TLS by setting MCP_HTTP_HTTPS_ENABLED=false
  tls.crt: ""
  tls.key: ""
---
apiVersion: v1
kind: Secret
metadata:
  name: sonarqube-mcp-oauth
  namespace: sonarqube-mcp
  labels:
    app.kubernetes.io/name: sonarqube-mcp
    app.kubernetes.io/instance: production
    app.kubernetes.io/component: oauth
type: Opaque
data:
  # Base64 encoded OAuth public key in PEM format
  # echo -n "-----BEGIN PUBLIC KEY-----
  # MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA...
  # -----END PUBLIC KEY-----" | base64
  public.pem: ""