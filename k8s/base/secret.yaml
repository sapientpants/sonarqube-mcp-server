apiVersion: v1
kind: Secret
metadata:
  name: sonarqube-mcp-secrets
  namespace: sonarqube-mcp
  labels:
    app.kubernetes.io/name: sonarqube-mcp
    app.kubernetes.io/instance: production
    app.kubernetes.io/component: secrets
type: Opaque
stringData:
  # Default SonarQube token
  SONARQUBE_TOKEN: "squ_changeme"
  
  # Service Account Tokens
  SERVICE_ACCOUNT_SA1_USERNAME: "sa-team-alpha"
  SERVICE_ACCOUNT_SA1_TOKEN: "squ_changeme_team_alpha"
  SERVICE_ACCOUNT_SA1_GROUP_PATTERN: "team-alpha|alpha-.*"
  
  SERVICE_ACCOUNT_SA2_USERNAME: "sa-team-beta"
  SERVICE_ACCOUNT_SA2_TOKEN: "squ_changeme_team_beta"
  SERVICE_ACCOUNT_SA2_GROUP_PATTERN: "team-beta|beta-.*"
  
  SERVICE_ACCOUNT_SA3_USERNAME: "sa-team-security"
  SERVICE_ACCOUNT_SA3_TOKEN: "squ_changeme_team_security"
  SERVICE_ACCOUNT_SA3_GROUP_PATTERN: "security|sec-.*"
---
apiVersion: v1
kind: Secret
metadata:
  name: sonarqube-mcp-tls
  namespace: sonarqube-mcp
  labels:
    app.kubernetes.io/name: sonarqube-mcp
    app.kubernetes.io/instance: production
    app.kubernetes.io/component: tls
type: kubernetes.io/tls
data:
  # Base64 encoded TLS certificate and key
  # Generate with: kubectl create secret tls sonarqube-mcp-tls --cert=tls.crt --key=tls.key --dry-run=client -o yaml
  tls.crt: ""
  tls.key: ""
---
apiVersion: v1
kind: Secret
metadata:
  name: sonarqube-mcp-oauth
  namespace: sonarqube-mcp
  labels:
    app.kubernetes.io/name: sonarqube-mcp
    app.kubernetes.io/instance: production
    app.kubernetes.io/component: oauth
type: Opaque
data:
  # Base64 encoded OAuth public key in PEM format
  # echo -n "-----BEGIN PUBLIC KEY-----
  # MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA...
  # -----END PUBLIC KEY-----" | base64
  public.pem: ""