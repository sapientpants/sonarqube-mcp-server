apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarqube-mcp
  namespace: sonarqube-mcp
  labels:
    app.kubernetes.io/name: sonarqube-mcp
    app.kubernetes.io/instance: production
    app.kubernetes.io/component: server
    app.kubernetes.io/version: "1.9.0"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: sonarqube-mcp
      app.kubernetes.io/instance: production
      app.kubernetes.io/component: server
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sonarqube-mcp
        app.kubernetes.io/instance: production
        app.kubernetes.io/component: server
        app.kubernetes.io/version: "1.9.0"
      annotations: {}
    spec:
      serviceAccountName: sonarqube-mcp
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      containers:
        - name: sonarqube-mcp
          image: sapientpants/sonarqube-mcp-server:latest
          imagePullPolicy: IfNotPresent
          args:
            - node
            - --experimental-specifier-resolution=node
            - dist/index.js
          # stdio transport - no ports needed
          env:
            # Node.js optimization
            - name: NODE_OPTIONS
              value: "--max-old-space-size=1024"
            - name: UV_THREADPOOL_SIZE
              value: "8"
          envFrom:
            - configMapRef:
                name: sonarqube-mcp-config
            - secretRef:
                name: sonarqube-mcp-secrets
          volumeMounts:
            - name: logs
              mountPath: /app/logs
            - name: tmp
              mountPath: /tmp
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
              ephemeral-storage: "1Gi"
            limits:
              memory: "2Gi"
              cpu: "2000m"
              ephemeral-storage: "5Gi"
          # stdio transport - using exec probes instead of HTTP
          livenessProbe:
            exec:
              command:
                - node
                - -e
                - "process.exit(0)"
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - node
                - -e
                - "process.exit(0)"
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1001
            capabilities:
              drop:
                - ALL
      volumes:
        - name: logs
          emptyDir:
            sizeLimit: 1Gi
        - name: tmp
          emptyDir:
            sizeLimit: 500Mi
