# =============================================================================
# REUSABLE WORKFLOW: Security Scanning Suite
# PURPOSE: Run security scans (CodeQL, OSV) and generate SBOM
# USAGE: Called by PR and main workflows for security validation
# OUTPUTS: Security findings uploaded to GitHub Security tab, SBOM artifact
# =============================================================================

name: Reusable Security

on:
  workflow_call:
    inputs:
      node-version:
        description: 'Node.js version (should match package.json engines.node)'
        type: string
        default: '22' # UPDATE: When upgrading Node.js
      pnpm-version:
        description: 'pnpm version (should match package.json packageManager)'
        type: string
        default: '10.17.0' # UPDATE: When upgrading pnpm
      run-codeql:
        description: 'Run CodeQL static analysis for security vulnerabilities'
        type: boolean
        default: true
      run-osv-scan:
        description: 'Run OSV scanner for dependency vulnerabilities'
        type: boolean
        default: true
      generate-sbom:
        description: 'Generate Software Bill of Materials (SBOM)'
        type: boolean
        default: false

# SECURITY: Required permissions for security scanning
permissions:
  actions: read # Read workflow metadata
  contents: read # Read source code
  security-events: write # Upload security findings

# EXAMPLE USAGE:
# jobs:
#   security:
#     uses: ./.github/workflows/reusable-security.yml
#     with:
#       run-codeql: true
#       run-osv-scan: true
#       generate-sbom: true

jobs:
  audit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Full history for accurate analysis

      # =============================================================================
      # ENVIRONMENT SETUP
      # Required for SBOM generation and dependency analysis
      # =============================================================================

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ inputs.pnpm-version }}
          run_install: false
          standalone: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
          cache: pnpm # Cache dependencies for speed

      - name: Install dependencies
        # Dependencies needed for accurate SBOM generation
        run: pnpm install --frozen-lockfile

      - name: Security audit
        # Check for known vulnerabilities in dependencies
        # FAILS IF: Critical vulnerabilities found
        # To fix: Run 'pnpm update' or add overrides in package.json
        run: pnpm audit --audit-level critical

  codeql:
    if: inputs.run-codeql
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Full history for accurate analysis

      # =============================================================================
      # ENVIRONMENT SETUP
      # Required for SBOM generation and dependency analysis
      # =============================================================================

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ inputs.pnpm-version }}
          run_install: false
          standalone: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
          cache: pnpm

      - name: Install dependencies
        # Dependencies needed for accurate SBOM generation
        run: pnpm install --frozen-lockfile

      # =============================================================================
      # CODEQL STATIC ANALYSIS
      # Scans for security vulnerabilities in source code
      # =============================================================================

      - name: Initialize CodeQL
        # Setup CodeQL for JavaScript/TypeScript analysis
        # Detects: XSS, SQL injection, path traversal, etc.
        uses: github/codeql-action/init@v3
        with:
          languages: javascript-typescript

      - name: Run CodeQL Analysis
        # Perform analysis and upload results to Security tab
        # Results viewable at: Security > Code scanning alerts
        # FAILS IF: Critical security issues detected (configurable)
        uses: github/codeql-action/analyze@v3

  osv-scan:
    if: inputs.run-osv-scan
    uses: google/osv-scanner-action/.github/workflows/osv-scanner-reusable.yml@v2.2.1
    with:
      # Scan entire project including all manifests (package.json, pnpm-lock.yaml)
      scan-args: |-
        ./
    permissions:
      security-events: write # Required to upload findings to Security tab
      actions: read
      contents: read

  sbom:
    if: inputs.generate-sbom
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ inputs.pnpm-version }}
          run_install: false
          standalone: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
          cache: pnpm

      - name: Install dependencies
        # Dependencies needed for accurate SBOM generation
        run: pnpm install --frozen-lockfile

      - name: Generate SBOM
        if: inputs.generate-sbom
        # Creates CycloneDX format SBOM (sbom.cdx.json)
        # Includes all production and dev dependencies
        run: pnpm sbom

      - name: Upload SBOM
        if: inputs.generate-sbom
        # Make SBOM available for compliance and auditing
        uses: actions/upload-artifact@v4
        with:
          name: sbom-${{ github.sha }}
          path: sbom.cdx.json
          retention-days: 7
